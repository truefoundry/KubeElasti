apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "elasti.fullname" . }}-operator-controller-manager
  namespace: '{{ .Release.Namespace }}'
  labels:
    control-plane: controller-manager
    {{- include "elasti.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.operatorController.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
      {{- include "elasti.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
        {{- include "elasti.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
        prometheus.io/path: /metrics
        prometheus.io/port: {{ .Values.operatorController.service.port | quote }}
        prometheus.io/scrape: "true"
    spec:
      containers:
      - args: 
        {{- toYaml .Values.operatorController.manager.args | nindent 8 }}
        command:
        - /manager
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.global.kubernetesClusterDomain }}
        image: {{ .Values.operatorController.manager.image.repository }}:{{ .Values.operatorController.manager.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.operatorController.manager.imagePullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: {{ .Values.operatorController.service.port }}
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: 
          {{- toYaml .Values.operatorController.manager.resources | nindent 10 }}
        securityContext: 
          {{- toYaml .Values.operatorController.manager.containerSecurityContext | nindent 10 }}
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ include "elasti.fullname" . }}-operator-controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "elasti.fullname" . }}-resolver
  namespace: '{{ .Release.Namespace }}'
  labels:
    {{- include "elasti.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.resolver.replicas }}
  selector:
    matchLabels:
      app: elasti-resolver
      {{- include "elasti.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: elasti-resolver
        {{- include "elasti.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: {{ .Values.resolver.service.port | quote }}
        prometheus.io/scrape: "true"
    spec:
      containers:
      - env:
        - name: MAX_IDLE_PROXY_CONNS
          value: {{ quote .Values.resolver.proxy.env.maxIdleProxyConns }}
        - name: MAX_IDLE_PROXY_CONNS_PER_HOST
          value: {{ quote .Values.resolver.proxy.env.maxIdleProxyConnsPerHost }}
        - name: REQ_TIMEOUT
          value: {{ quote .Values.resolver.proxy.env.reqTimeout }}
        - name: TRAFFIC_RE_ENABLE_DURATION
          value: {{ quote .Values.resolver.proxy.env.trafficReEnableDuration }}
        - name: OPERATOR_RETRY_DURATION
          value: {{ quote .Values.resolver.proxy.env.operatorRetryDuration }}
        - name: HEADER_FOR_HOST
          value: {{ quote .Values.resolver.proxy.env.headerForHost }}
        - name: QUEUE_SIZE
          value: {{ quote .Values.resolver.proxy.env.queueSize }}
        - name: QUEUE_RETRY_DURATION
          value: {{ quote .Values.resolver.proxy.env.queueRetryDuration }}
        - name: MAX_QUEUE_CONCURRENCY
          value: {{ quote .Values.resolver.proxy.env.maxQueueConcurrency }}
        - name: INITIAL_CAPACITY
          value: {{ quote .Values.resolver.proxy.env.initialCapacity }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.global.kubernetesClusterDomain }}
        image: {{ .Values.resolver.proxy.image.repository }}:{{ .Values.resolver.proxy.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.resolver.proxy.imagePullPolicy }}
        name: proxy
        ports:
        - containerPort: {{ .Values.resolver.service.port }}
        resources: 
          {{- toYaml .Values.resolver.proxy.resources | nindent 10 }}
